<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baking.bakingapi.mapper.ContentMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.baking.bakingapi.entity.Content">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="img_url" property="imgUrl" />
        <result column="video_url" property="videoUrl" />
        <result column="content" property="content" />
        <result column="type" property="type" />
        <result column="view_count" property="viewCount" />
        <result column="comment_count" property="commentCount" />
        <result column="brief" property="brief" />
        <result column="category_id" property="categoryId" />
        <result column="user_id" property="userId" />
        <result column="update_by" property="updateBy" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, title, img_url, video_url, content, type, view_count, comment_count, brief, category_id, user_id, update_by, create_time, update_time
    </sql>
    <update id="updateViewCountById">
        UPDATE content
        SET view_count=view_count+1
        WHERE id=#{id}
    </update>
    <update id="updateCommentCountById">
        UPDATE content
        SET comment_count = comment_count+1
        WHERE id=#{contentId}
    </update>
    <select id="selectForManagement" resultType="com.baking.bakingapi.entity.Content">
        SELECT c.id,title,brief,c.type,
               cat.name categoryName,view_count,comment_count,c.create_time
        FROM content c JOIN category cat ON c.category_id = cat.id
        WHERE c.type=#{type} AND c.user_id=#{userId}
        ORDER BY c.create_time DESC
    </select>
    <select id="selectForUpdateById" resultType="com.baking.bakingapi.entity.Content">
        SELECT id,title,img_url,video_url,content,type,category_id
        FROM content
        WHERE id=#{id}
    </select>
    <select id="selectForIndex" resultType="com.baking.bakingapi.entity.Content">
        SELECT c.id,title,c.img_url,u.img_url userImgUrl,nickname,cat.name categoryName
        FROM content c
        JOIN user u ON c.user_id=u.id
        JOIN category cat ON c.category_id = cat.id
        WHERE c.type=#{type}
        <if test="categoryId!=0">AND c.category_id=#{categoryId}</if>
        LIMIT 0,4
    </select>
    <select id="selectForDetailById" resultType="com.baking.bakingapi.entity.Content">
        SELECT c.id,title,content,brief,type,view_count,video_url,
               c.create_time,nickname,u.img_url userImgUrl,u.id userId
        FROM content c JOIN user u ON c.user_id = u.id
        WHERE c.id = #{id}
    </select>
    <select id="selectOtherByUserId" resultType="com.baking.bakingapi.entity.Content">
        SELECT id,title,img_url,create_time
        FROM content
        WHERE user_id=#{id}
        LIMIT 0,4
    </select>
    <select id="selectHot" resultType="com.baking.bakingapi.entity.Content">
        SELECT id,title,img_url,create_time
        FROM content
        ORDER  BY view_count DESC
        LIMIT 0,4
    </select>
    <select id="selectByType" resultType="com.baking.bakingapi.entity.Content">
        SELECT id,title,img_url,create_time
        FROM content
        ORDER  BY type DESC
        LIMIT 0,4
    </select>
    <select id="selectByWd" resultType="com.baking.bakingapi.entity.Content">
        SELECT id, title, img_url, create_time
        FROM content
        WHERE title LIKE CONCAT('%', #{wd}, '%')
        LIMIT 0, 4
    </select>
    <select id="selectForAdmin" resultType="com.baking.bakingapi.entity.Content">
        SELECT c.id,title,brief,img_url,view_count,comment_count,create_time,cat.name categoryName
        FROM content c JOIN category cat ON c.category_id=cat.id
        ORDER BY c.create_time DESC
    </select>

</mapper>
